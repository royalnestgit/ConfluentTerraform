data "vault_generic_secret" "ccloud_credentials" {
  path = "secret/it-ea/kafka/aks/${terraform.workspace}/ccloud-credentials"
}

data "vault_generic_secret" "ccloud_sr_credentials" {
  path = "secret/it-ea/kafka/aks/${terraform.workspace}/ccloud-sr-credentials"
}
data "vault_generic_secret" "confluent_license" {
  path = "secret/it-ea/kafka/aks/${terraform.workspace}/confluent-license"
}
data "vault_generic_secret" "connect_cluster_basic_client" {
  path = "secret/it-ea/kafka/aks/${terraform.workspace}/connect-cluster-basic-client"
}
data "vault_generic_secret" "control_center_basic_server" {
  path = "secret/it-ea/kafka/aks/${terraform.workspace}/control-center-basic-server"
}
data "vault_generic_secret" "connect_cluster_basic_server" {
  path = "secret/it-ea/kafka/aks/${terraform.workspace}/connect-cluster-basic-server"
}
data "vault_generic_secret" "dockerconfig" {
  path = "secret/it-ea/kafka/aks/dockerconfig"
}
data "vault_generic_secret" "dockerconfig_aks" {
  path = "secret/it-ea/kafka/aks/dockerconfig_aks"
}




resource "kubernetes_secret" "ccloud_credentials" {
  metadata {
    name      = "ccloud-credentials"
    namespace = var.confluent_namespace
  }

  data = {
    "plain.txt" = base64decode(data.vault_generic_secret.ccloud_credentials.data["ccloud-credentials"])
  }
}



resource "kubernetes_secret" "ccloud_sr_credentials" {
  metadata {
    name      = "ccloud-sr-credentials"
    namespace = var.confluent_namespace
  }

  data = {
    "basic.txt" = base64decode(data.vault_generic_secret.ccloud_sr_credentials.data["ccloud-sr-credentials"])
  }
}

resource "kubernetes_secret" "connect-cluster-basic-client" {
  metadata {
    name      = "connect-cluster-basic-client"
    namespace = var.confluent_namespace
  }

  data = {
    "basic.txt" = base64decode(data.vault_generic_secret.connect_cluster_basic_client.data["connect-cluster-basic-client"])
  }
}

resource "kubernetes_secret" "connect-cluster-basic-clientd" {

  metadata {
    name      = "connect-cluster-basic-clientd"
    namespace = var.confluent_namespace
  }

  data = {
    "basic.txt" = base64decode(data.vault_generic_secret.connect_cluster_basic_client.data["connect-cluster-basic-client-dev"])
  }
}


resource "kubernetes_secret" "connect-cluster-basic-server" {
  metadata {
    name      = "connect-cluster-basic-server"
    namespace = var.confluent_namespace
  }

  data = {
    "basic.txt" = base64decode(data.vault_generic_secret.connect_cluster_basic_server.data["connect-cluster-basic-server"])
  }
}
resource "kubernetes_secret" "control-center-basic-server" {
  metadata {
    name      = "control-center-basic-server"
    namespace = var.confluent_namespace
  }

  data = {
    "basic.txt" = base64decode(data.vault_generic_secret.control_center_basic_server.data["control-center-basic-server"])
  }
}



resource "kubernetes_secret" "registry_credentials" {
  metadata {
    name      = "registry-credentials"
    namespace = var.confluent_namespace
  }

  data = {
    ".dockerconfigjson" = base64decode(data.vault_generic_secret.dockerconfig.data["dockerconfig"])
  }

  type = "kubernetes.io/dockerconfigjson"
}

resource "kubernetes_secret" "registry_credentials_aks" {
  metadata {
    name      = "registry-credentials-aks"
    namespace = var.confluent_namespace
  }

  data = {
    ".dockerconfigjson" = base64decode(data.vault_generic_secret.dockerconfig_aks.data["dockerconfig"])
  }

  type = "kubernetes.io/dockerconfigjson"
}

resource "kubernetes_secret" "confluent_license" {
  metadata {
    name      = "confluent-license"
    namespace = var.confluent_namespace
  }

  data = {
    "license.txt" = base64decode(data.vault_generic_secret.confluent_license.data["confluent-license"])
  }

  type = "Opaque"
}






