resource "kubernetes_manifest" "connect_confluent_cluster" {

  manifest = {
    "apiVersion" = "platform.confluent.io/v1beta1"
    "kind"       = "Connect"
    "metadata" = {
      "name"      = "connect-cluster-${terraform.workspace}"
      "namespace" = var.confluent_namespace
    }
    "spec" = {
      "build" = {
        "onDemand" = {
          "plugins" = {
            "confluentHub" = [
              {
                "name"    = "kafka-connect-http"
                "owner"   = "confluentinc"
                "version" = "1.6.0"
              },
              {
                "name"    = "kafka-connect-salesforce-bulk-api"
                "owner"   = "confluentinc"
                "version" = "2.0.20"
              },
              {
                "name"    = "snowflake-kafka-connector"
                "owner"   = "snowflakeinc"
                "version" = "2.2.2"
              },
              {
                "name"    = "kafka-connect-jdbc"
                "owner"   = "confluentinc"
                "version" = "10.7.6"
              },
              {
                "name"    = "kafka-connect-elasticsearch"
                "owner"   = "confluentinc"
                "version" = "14.1.1"
              },
              {
                "name"    = "kafka-connect-datagen"
                "owner"   = "confluentinc"
                "version" = "0.6.4"
              },
            ]
            "locationType" = "confluentHub"
          }
        }
        "type" = "onDemand"
      }
      "dependencies" = {
        "kafka" = {
          "authentication" = {
            "jaasConfig" = {
              "secretRef" = var.ccloud-credentials
            }
            "type" = "plain"
          }
          "bootstrapEndpoint" = local.bootstrap_endpoint
          "tls" = {
            "enabled"                = true
            "ignoreTrustStoreConfig" = true
          }
        }
        "schemaRegistry" = {
          "authentication" = {
            "basic" = {
              "secretRef" = var.ccloud-sr-credentials
            }
            "type" = "basic"
          }
          "url" = local.schema_registry
        }
      }
      "image" = {
        "application" = local.connector_tag
        "init"        = "confluentinc/confluent-init-container:2.8.0"
        "pullSecretRef" = [
          var.registry-credentials,
        ]
      }
      "metrics" = {
        "prometheus" = {
          "rules" = [
            {
              "pattern" = ".*"
            },
          ]
        }
      }
      "podTemplate" = {
        "resources" = {
          "limits" = {
            "cpu"    = local.connect_cluster_resources[terraform.workspace].limits.cpu
            "memory" = local.connect_cluster_resources[terraform.workspace].limits.memory
          }
          "requests" = {
            "cpu"    = local.connect_cluster_resources[terraform.workspace].requests.cpu
            "memory" = local.connect_cluster_resources[terraform.workspace].requests.memory
          }
        }
      }
      "configOverrides" = {
        "log4j" = ["connect.log.pattern=[%d] %p %X{connector.context}%m (%c:%L)%n", "log4j.appender.stdout.layout.ConversionPattern=$${connect.log.pattern}"]
      }

      "replicas" = local.connect_cluster_resources[terraform.workspace].replicas
      "license"  = { "secretRef" = var.confluent-license }
      "authentication" = {
        "type" = "basic"

        "basic" = {
          "secretRef" = var.connect-cluster-basic-server
        }
      }
    }
  }
  field_manager {
    name            = "myteam"
    force_conflicts = true
  }
}


resource "kubernetes_manifest" "service_confluent_connect_cluster_lb_svc" {
  manifest = {
    "apiVersion" = "v1"
    "kind"       = "Service"
    "metadata" = {
      "annotations" = {
        "platform.confluent.io/cr-name"                           = "connect-cluster"
        "platform.confluent.io/namespace"                         = var.confluent_namespace
        "platform.confluent.io/type"                              = "connect"
        "service.beta.kubernetes.io/azure-load-balancer-internal" = "true"
      }
      "labels" = {
        "app.kubernetes.io/managed-by" = "confluent-operator"
        "confluent-platform"           = "true"
        "cr-name"                      = "connect-cluster"
        "type"                         = "connect"
      }
      "name"      = "connect-cluster-svc-lb"
      "namespace" = var.confluent_namespace
    }
    "spec" = {
      "ports" = [
        {
          "name"       = "jmx"
          "port"       = 7203
          "protocol"   = "TCP"
          "targetPort" = 7203
        },
        {
          "name"       = "external"
          "port"       = 8083
          "protocol"   = "TCP"
          "targetPort" = 8083
        },
        {
          "name"       = "jolokia"
          "port"       = 7777
          "protocol"   = "TCP"
          "targetPort" = 7777
        },
        {
          "name"       = "prometheus"
          "port"       = 7778
          "protocol"   = "TCP"
          "targetPort" = 7778
        },
      ]
      "publishNotReadyAddresses" = true
      "selector" = {
        "app"                = "connect-cluster-${terraform.workspace}"
        "clusterId"          = "${var.confluent_namespace}"
        "confluent-platform" = "true"
        "type"               = "connect-cluster-${terraform.workspace}"
      }
      "sessionAffinity" = "None"
      "type"            = "LoadBalancer"
    }
  }
}

resource "kubernetes_manifest" "controlcenter_confluent_controlcenter" {
  count = local.c3_create_resource ? 1 : 0

  manifest = {
    "apiVersion" = "platform.confluent.io/v1beta1"
    "kind"       = "ControlCenter"
    "metadata" = {
      "name"      = "c3-${terraform.workspace}"
      "namespace" = var.confluent_namespace
    }
    "spec" = {
      "authentication" = {
        "basic" = {
          "restrictedRoles" = [
            "Restricted",
          ]
          "roles" = [
            "Administrators",
            "Restricted",
          ]
          "secretRef" = var.control-center-basic-server
        }
        "type" = "basic"
      }
      "dataVolumeCapacity" = "10Gi"
      "dependencies" = {
        "connect" = [
          {
            "authentication" = {
              "basic" = {
                "secretRef" = var.connect-cluster-basic-client
              }
              "type" = "basic"
            }
            "name" = "connect-cluster-${terraform.workspace}"
            "url"  = "http://connect-cluster-${terraform.workspace}.${var.confluent_namespace}.svc.cluster.local:8083"
            # "url" = "http://10.232.149.26:8083"
          },
          {
            "authentication" = {
              "basic" = {
                "secretRef" = var.connect-cluster-basic-clientd
              }
              "type" = "basic"
            }
            "name" = "connect-cluster-cfk-uat"
            "url"  = var.uat_connect_cluster
          },
          {
            "authentication" = {
              "basic" = {
                "secretRef" = var.connect-cluster-basic-clientd
              }
              "type" = "basic"
            }
            "name" = "connect-cluster-cfk-dev"
            "url"  = var.dev_connect_cluster
          },
        ]
        "kafka" = {
          "authentication" = {
            "jaasConfig" = {
              "secretRef" = var.ccloud-credentials
            }
            "type" = "plain"
          }
          "bootstrapEndpoint" = local.bootstrap_endpoint
          "tls" = {
            "enabled"                = true
            "ignoreTrustStoreConfig" = true
          }
        }
        "schemaRegistry" = {
          "authentication" = {
            "basic" = {
              "secretRef" = var.ccloud-sr-credentials
            }
            "type" = "basic"
          }
          "url" = local.schema_registry
        }
      }
      "image" = {
        "application" = "confluentinc/cp-enterprise-control-center:7.7.1"
        "init"        = "confluentinc/confluent-init-container:2.8.0"
      }
      "id" = 2
      "license" = {
        "secretRef" = var.confluent-license
      }
      "podTemplate" = {
        "resources" = {
          "limits" = {
            "cpu"    = local.control_center_resources[terraform.workspace].limits.cpu
            "memory" = local.control_center_resources[terraform.workspace].limits.memory
          }
          "requests" = {
            "cpu"    = local.control_center_resources[terraform.workspace].requests.cpu
            "memory" = local.control_center_resources[terraform.workspace].requests.memory
          }
        }
      }
      "replicas" = local.control_center_resources[terraform.workspace].replicas
    }

  }
  field_manager {
    name            = "myteam"
    force_conflicts = true
  }
}


resource "kubernetes_manifest" "service_confluent_controlcenter_lb_svc" {
  count = local.c3_create_resource ? 1 : 0
  manifest = {
    "apiVersion" = "v1"
    "kind"       = "Service"
    "metadata" = {
      "annotations" = {
        "platform.confluent.io/cr-name"                           = "controlcenter"
        "platform.confluent.io/namespace"                         = var.confluent_namespace
        "platform.confluent.io/type"                              = "controlcenter"
        "service.beta.kubernetes.io/azure-load-balancer-internal" = "true"
      }
      "labels" = {
        "app.kubernetes.io/managed-by" = "confluent-operator"
        "confluent-platform"           = "true"
        "cr-name"                      = "controlcenter"
        "type"                         = "controlcenter"
      }
      "name"      = "controlcenter-lb-svc"
      "namespace" = var.confluent_namespace
    }
    "spec" = {
      "ports" = [
        {
          "name"       = "external"
          "port"       = 9021
          "protocol"   = "TCP"
          "targetPort" = 9021
        },
        {
          "name"       = "jmx"
          "port"       = 7203
          "protocol"   = "TCP"
          "targetPort" = 7203
        },
        {
          "name"       = "jolokia"
          "port"       = 7777
          "protocol"   = "TCP"
          "targetPort" = 7777
        },
        {
          "name"       = "prometheus"
          "port"       = 7778
          "protocol"   = "TCP"
          "targetPort" = 7778
        },
      ]
      "publishNotReadyAddresses" = true
      "selector" = {
        "app"                = "c3-${terraform.workspace}"
        "clusterId"          = "${var.confluent_namespace}"
        "confluent-platform" = "true"
        "type"               = "c3-${terraform.workspace}"
      }
      "sessionAffinity" = "None"
      "type"            = "LoadBalancer"
    }
  }
}



